### YamlMime:ManagedReference
items:
- uid: com.microsoft.azure.eventprocessorhost
  id: eventprocessorhost
  children:
  - com.microsoft.azure.eventprocessorhost._azure_storage_partition_manager_options
  - com.microsoft.azure.eventprocessorhost._base_lease
  - com.microsoft.azure.eventprocessorhost._checkpoint
  - com.microsoft.azure.eventprocessorhost._close_reason
  - com.microsoft.azure.eventprocessorhost._complete_lease
  - com.microsoft.azure.eventprocessorhost._event_processor_host
  - com.microsoft.azure.eventprocessorhost._event_processor_host_action_strings
  - com.microsoft.azure.eventprocessorhost._event_processor_options
  - com.microsoft.azure.eventprocessorhost._event_processor_options._end_of_stream_initial_position_provider
  - com.microsoft.azure.eventprocessorhost._event_processor_options._start_of_stream_initial_position_provider
  - com.microsoft.azure.eventprocessorhost._exception_received_event_args
  - com.microsoft.azure.eventprocessorhost._i_checkpoint_manager
  - com.microsoft.azure.eventprocessorhost._i_event_processor
  - com.microsoft.azure.eventprocessorhost._i_event_processor_factory
  - com.microsoft.azure.eventprocessorhost._i_lease_manager
  - com.microsoft.azure.eventprocessorhost._in_memory_checkpoint_manager
  - com.microsoft.azure.eventprocessorhost._in_memory_lease_manager
  - com.microsoft.azure.eventprocessorhost._lease_lost_exception
  - com.microsoft.azure.eventprocessorhost._logging_utils
  - com.microsoft.azure.eventprocessorhost._partition_context
  - com.microsoft.azure.eventprocessorhost._partition_manager_options
  href: com.microsoft.azure.eventprocessorhost.yml
  langs:
  - java
  name: com.microsoft.azure.eventprocessorhost
  nameWithType: com.microsoft.azure.eventprocessorhost
  fullName: com.microsoft.azure.eventprocessorhost
  type: Namespace
  source:
    remote:
      path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/AzureBlobLease.java
      branch: master
      repo: https://github.com/Azure/azure-event-hubs-java
    path: azure-eventhubs-eph/src/main/java/com/microsoft/azure/eventprocessorhost/AzureBlobLease.java
    startLine: 5
  syntax:
    content: package com.microsoft.azure.eventprocessorhost
references:
- uid: com.microsoft.azure.eventprocessorhost._azure_storage_partition_manager_options
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._azure_storage_partition_manager_options.yml
  name: AzureStoragePartitionManagerOptions
  nameWithType: AzureStoragePartitionManagerOptions
  fullName: com.microsoft.azure.eventprocessorhost.AzureStoragePartitionManagerOptions
  type: Class
  syntax:
    content: public class AzureStoragePartitionManagerOptions extends PartitionManagerOptions
- uid: com.microsoft.azure.eventprocessorhost._base_lease
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._base_lease.yml
  name: BaseLease
  nameWithType: BaseLease
  fullName: com.microsoft.azure.eventprocessorhost.BaseLease
  type: Class
  summary: >-
    <p>BaseLease class is public so that advanced users can implement an ILeaseManager. Unless you are implementing ILeaseManager you should not have to deal with objects of this class or derived classes directly. </p>

    <p>This lightweight base exists to allow ILeaseManager.getAllLeases to operate as quickly as possible <ndash></ndash> for some lease manager implementations, loading the entire contents of a lease form the store may be expensive. BaseLease contains only the minimum amount of information required to allow PartitionScanner to operate. </p>

    <p>Note that a Lease object just carries information about a partition lease. The APIs to acquire/renew/release a lease are all on ILeaseManager. </p>
  syntax:
    content: public class BaseLease
- uid: com.microsoft.azure.eventprocessorhost._checkpoint
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._checkpoint.yml
  name: Checkpoint
  nameWithType: Checkpoint
  fullName: com.microsoft.azure.eventprocessorhost.Checkpoint
  type: Class
  summary: >-
    <p>Checkpoint class is public so that advanced users can implement an ICheckpointManager. Unless you are implementing ICheckpointManager you should not have to deal with objects of this class directly. </p>

    <p>A Checkpoint is essentially just a tuple. It has a fixed partition id, set at creation time and immutable thereafter, and associates that with an offset/sequenceNumber pair which indicates a position within the events in that partition. </p>
  syntax:
    content: public class Checkpoint
- uid: com.microsoft.azure.eventprocessorhost._close_reason
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._close_reason.yml
  name: CloseReason
  nameWithType: CloseReason
  fullName: com.microsoft.azure.eventprocessorhost.CloseReason
  type: Enum
  syntax:
    content: public enum CloseReason
- uid: com.microsoft.azure.eventprocessorhost._complete_lease
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._complete_lease.yml
  name: CompleteLease
  nameWithType: CompleteLease
  fullName: com.microsoft.azure.eventprocessorhost.CompleteLease
  type: Class
  summary: >-
    <p>CompleteLease class is public so that advanced users can implement an ILeaseManager. Unless you are implementing ILeaseManager you should not have to deal with objects of this class or derived classes directly. </p>

    <p>CompleteLease carries around complete information about a lease. By itself, it has the epoch. Any lease manager implementation can derive from this class to add data which the lease manager needs to function <ndash></ndash> see AzureBlobLease for an example. Having two distinct classes allows the code to clearly express which variety of lease any variable holds or a method requires, and avoids the problem of accidentally supplying a lightweight BaseLease to a method which needs the lease-manager-specific fields. </p>
  syntax:
    content: public class CompleteLease extends BaseLease
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._event_processor_host.yml
  name: EventProcessorHost
  nameWithType: EventProcessorHost
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHost
  type: Class
  syntax:
    content: public class EventProcessorHost
- uid: com.microsoft.azure.eventprocessorhost._event_processor_host_action_strings
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._event_processor_host_action_strings.yml
  name: EventProcessorHostActionStrings
  nameWithType: EventProcessorHostActionStrings
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorHostActionStrings
  type: Class
  syntax:
    content: public class EventProcessorHostActionStrings
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._event_processor_options.yml
  name: EventProcessorOptions
  nameWithType: EventProcessorOptions
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions
  type: Class
  syntax:
    content: public class EventProcessorOptions
- uid: com.microsoft.azure.eventprocessorhost._exception_received_event_args
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._exception_received_event_args.yml
  name: ExceptionReceivedEventArgs
  nameWithType: ExceptionReceivedEventArgs
  fullName: com.microsoft.azure.eventprocessorhost.ExceptionReceivedEventArgs
  type: Class
  summary: <p>Passed as an argument to the general exception handler that can be set via EventProcessorOptions. </p>
  syntax:
    content: public class ExceptionReceivedEventArgs
- uid: com.microsoft.azure.eventprocessorhost._i_checkpoint_manager
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._i_checkpoint_manager.yml
  name: ICheckpointManager
  nameWithType: ICheckpointManager
  fullName: com.microsoft.azure.eventprocessorhost.ICheckpointManager
  type: Interface
  syntax:
    content: public interface ICheckpointManager
- uid: com.microsoft.azure.eventprocessorhost._i_event_processor
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._i_event_processor.yml
  name: IEventProcessor
  nameWithType: IEventProcessor
  fullName: com.microsoft.azure.eventprocessorhost.IEventProcessor
  type: Interface
  summary: >-
    <p>Interface that must be implemented by event processor classes. </p>

    <p>Any given instance of an event processor class will only process events from one partition of one Event Hub. A PartitionContext is provided with each call to the event processor because some parameters could change, but it will always be the same partition. </p>

    <p>Although EventProcessorHost is multithreaded, calls to a given instance of an event processor class are serialized, except for onError(). onOpen() is called first, then onEvents() will be called zero or more times. When the event processor needs to be shut down, whether because there was a failure somewhere, or the lease for the partition has been lost, or because the entire processor host is being shut down, onClose() is called after the last onEvents() call returns. </p>

    <p>onError() could be called while onEvents() or onClose() is executing. No synchronization is attempted in order to avoid possibly deadlocking. </p>
  syntax:
    content: public interface IEventProcessor
- uid: com.microsoft.azure.eventprocessorhost._i_event_processor_factory
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._i_event_processor_factory.yml
  name: IEventProcessorFactory<T>
  nameWithType: IEventProcessorFactory<T>
  fullName: com.microsoft.azure.eventprocessorhost.IEventProcessorFactory<T>
  type: Interface
  summary: >-
    <p>Interface that must be implemented by an event processor factory class. </p>

    <p>User-provided factories are needed if creating an event processor object requires more work than just a new with a parameterless constructor.</p>

    <p></p>
  syntax:
    content: public interface IEventProcessorFactory<T extends IEventProcessor>
    typeParameters:
    - id: T
      type: 8ce1ecb9
      description: <p>The type of event processor objects produced by this factory, which must implement IEventProcessor </p>
- uid: com.microsoft.azure.eventprocessorhost._i_lease_manager
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._i_lease_manager.yml
  name: ILeaseManager
  nameWithType: ILeaseManager
  fullName: com.microsoft.azure.eventprocessorhost.ILeaseManager
  type: Interface
  syntax:
    content: public interface ILeaseManager
- uid: com.microsoft.azure.eventprocessorhost._in_memory_checkpoint_manager
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._in_memory_checkpoint_manager.yml
  name: InMemoryCheckpointManager
  nameWithType: InMemoryCheckpointManager
  fullName: com.microsoft.azure.eventprocessorhost.InMemoryCheckpointManager
  type: Class
  syntax:
    content: public class InMemoryCheckpointManager implements ICheckpointManager
- uid: com.microsoft.azure.eventprocessorhost._in_memory_lease_manager
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._in_memory_lease_manager.yml
  name: InMemoryLeaseManager
  nameWithType: InMemoryLeaseManager
  fullName: com.microsoft.azure.eventprocessorhost.InMemoryLeaseManager
  type: Class
  syntax:
    content: public class InMemoryLeaseManager implements ILeaseManager
- uid: com.microsoft.azure.eventprocessorhost._lease_lost_exception
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._lease_lost_exception.yml
  name: LeaseLostException
  nameWithType: LeaseLostException
  fullName: com.microsoft.azure.eventprocessorhost.LeaseLostException
  type: Class
  syntax:
    content: public class LeaseLostException
- uid: com.microsoft.azure.eventprocessorhost._logging_utils
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._logging_utils.yml
  name: LoggingUtils
  nameWithType: LoggingUtils
  fullName: com.microsoft.azure.eventprocessorhost.LoggingUtils
  type: Class
  summary: <p>Centralize log message generation </p>
  syntax:
    content: public class LoggingUtils
- uid: com.microsoft.azure.eventprocessorhost._partition_context
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._partition_context.yml
  name: PartitionContext
  nameWithType: PartitionContext
  fullName: com.microsoft.azure.eventprocessorhost.PartitionContext
  type: Class
  syntax:
    content: public class PartitionContext
- uid: com.microsoft.azure.eventprocessorhost._partition_manager_options
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._partition_manager_options.yml
  name: PartitionManagerOptions
  nameWithType: PartitionManagerOptions
  fullName: com.microsoft.azure.eventprocessorhost.PartitionManagerOptions
  type: Class
  syntax:
    content: public class PartitionManagerOptions
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options._end_of_stream_initial_position_provider
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._event_processor_options._end_of_stream_initial_position_provider.yml
  name: EventProcessorOptions.EndOfStreamInitialPositionProvider
  nameWithType: EventProcessorOptions.EndOfStreamInitialPositionProvider
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.EndOfStreamInitialPositionProvider
  type: Class
  syntax:
    content: public class EndOfStreamInitialPositionProvider
- uid: com.microsoft.azure.eventprocessorhost._event_processor_options._start_of_stream_initial_position_provider
  parent: com.microsoft.azure.eventprocessorhost
  href: com.microsoft.azure.eventprocessorhost._event_processor_options._start_of_stream_initial_position_provider.yml
  name: EventProcessorOptions.StartOfStreamInitialPositionProvider
  nameWithType: EventProcessorOptions.StartOfStreamInitialPositionProvider
  fullName: com.microsoft.azure.eventprocessorhost.EventProcessorOptions.StartOfStreamInitialPositionProvider
  type: Class
  syntax:
    content: public class StartOfStreamInitialPositionProvider
